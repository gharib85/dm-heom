// This file is part of DM-HEOM (https://github.com/noma/dm-heom)
//
// Copyright (c) 2015-2019 Matthias Noack, Zuse Institute Berlin
//
// Licensed under the 3-clause BSD License, see accompanying LICENSE,
// CONTRIBUTORS.md, and README.md for further information.

#include "heom/error_norm.hpp"

namespace heom {

const std::string error_norm::embedded_ocl_source_ {
#include "error_norm.cl.hpp"  // NOTE: generated by CMake
};
const std::string error_norm::embedded_ocl_kernel_name_ { "error_norm" };

error_norm::error_norm(ocl::helper& ocl, const std::string& source_header, const std::string& ocl_compile_options, const ocl::nd_range& range)
	: ocl::kernel_wrapper(ocl, embedded_ocl_source_, embedded_ocl_kernel_name_, source_header, ocl_compile_options, range)
{
}

error_norm::error_norm(ocl::helper& ocl, const boost::filesystem::path& error_norm_file_name, const std::string& error_norm_kernel_name, const std::string& source_header, const std::string& ocl_compile_options, const ocl::nd_range& range)
		: ocl::kernel_wrapper(ocl, error_norm_file_name, error_norm_kernel_name, source_header, ocl_compile_options, range)
{
}

void error_norm::update(cl::Buffer& d_mem_error_norm, cl::Buffer& hierarchy_fourth, cl::Buffer& hierarchy_fifth)
{
	cl_int err = 0;

	// set dynamic kernel arguments
	err = kernel_.setArg(0, d_mem_error_norm);
	ocl::error_handler(err, "clSetKernelArg(0)");
	err = kernel_.setArg(1, hierarchy_fourth);
	ocl::error_handler(err, "clSetKernelArg(1)");
	err = kernel_.setArg(2, hierarchy_fifth);
	ocl::error_handler(err, "clSetKernelArg(2)");

	// run and benchmark kernel
	run_kernel();
}

} // namespace heom
